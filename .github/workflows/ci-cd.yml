# pyanno4rt CI/CD workflow

# Name of the workflow
name: CI/CD

# Set the trigger events
on:

  push:
    branches: [ master ]

  pull_request:
    branches: [ master ]

# Define the jobs
jobs:

  check-os-install:

    # Set the operating system matrix strategy
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    
    # Define the workflow steps
    steps:

    # Configure Python version
    - name: Configure Python version
      uses: actions/setup-python@v4
      with:
        python-version: 3.10.11

    # Check out the pyanno4rt repository
    - name: Check out the pyanno4rt repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    # Install poetry
    - name: Install poetry
      uses: abatilo/actions-poetry@v2.1.0
      with:
        poetry-version: 1.5.1
    
    # Install the package dependencies with poetry
    - name: Install the package dependencies with poetry
      run: poetry install

  test-deploy-module:
  
    # Set the job dependencies
    needs: check-os-install
    
    # Set the operating system
    runs-on: ubuntu-latest
    
    # Set the permissions
    permissions:
      id-token: write
      contents: write
    
    # Define the workflow steps
    steps:
    
    # Configure Python version
    - name: Configure Python version
      uses: actions/setup-python@v4
      with:
        python-version: 3.10.11

    # Check out the pyanno4rt repository
    - name: Check out the pyanno4rt repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    # Install poetry
    - name: Install poetry
      uses: abatilo/actions-poetry@v2.1.0
      with:
        poetry-version: 1.5.1
    
    # Install the package dependencies with poetry
    - name: Install the package dependencies with poetry
      run: poetry install
    
    # Run the test scripts with pytest
    - name: Run the test scripts with pytest
      run: poetry run pytest tests/ --cov=pyanno4rt --cov-report=lcov
    
    # Publish the coverage report to coveralls.io
    - name: Publish the coverage report to coveralls.io
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-lcov: ./coverage.lcov

  deploy-PyPI-RTD:
    
    # Set the job dependencies
    needs: test-deploy-module
    
    # Set the operating system
    runs-on: ubuntu-latest
    
    # Set the permissions
    permissions:
      id-token: write
      contents: write
    
    # Define the workflow steps
    steps:

    # Configure Python version
    - name: Configure Python version
      uses: actions/setup-python@v4
      with:
        python-version: 3.10.11

    # Check out the pyanno4rt repository
    - name: Check out the pyanno4rt repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    # Install poetry
    - name: Install poetry
      uses: abatilo/actions-poetry@v2.1.0
      with:
        poetry-version: 1.5.1
    
    # Install the package dependencies with poetry
    - name: Install the package dependencies with poetry
      run: poetry install
    
    # Build the documentation for Read the Docs
    - name: Build the documentation for Read the Docs
      run: poetry run make html --directory docs/
    
    # Build the package distribution files with poetry
    - name: Build the package distribution files with poetry
      run: poetry build

    # Publish the package to PyPI
    - name: Publish the package to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_TOKEN }}

    # Test the installation from PyPI
    - name: Test the installation from PyPI
      run: |
          pip install pyanno4rt
